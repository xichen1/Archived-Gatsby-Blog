{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","postList","map","node","slug","fields","frontmatter","title","description","date","key","style","marginBottom","rhythm","boxShadow","to","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"4FAAA,0HA8EeA,UArEF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SAAuC,IAAfA,EAAmB,GAAK,KAAhD,iBACIH,EADJ,IAGTK,EACJH,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACHC,EAASD,EAAKE,OAAdD,KADc,EAEeD,EAAKG,YAAlCC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,YAAaC,EAFN,EAEMA,KAC5B,OACE,6BAASC,IAAKN,GACZ,gCACE,wBACEO,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIX,GACrCG,IAGL,+BAAQE,IAEV,iCACE,uBACEO,wBAAyB,CACvBC,OAAQT,GAAeL,EAAKe,gBAQ1C,OACE,kBAAC,IAAD,CAAQX,MAAOP,GACb,kBAAC,IAAD,MACCC,EACD,kBAAC,OAAD,CAAMc,GAAG,SAAT,wBA+BC,IAAMI,EAAS","file":"component---src-templates-tags-js-fee600f8a88268a7b909.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport Layout from \"../components/layout\"\r\nimport Bio from \"../components/bio\"\r\n\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"\r\n    } tagged with \"${tag}\"`\r\n\r\n  const postList =\r\n    edges.map(({ node }) => {\r\n      const { slug } = node.fields\r\n      const { title, description, date } = node.frontmatter\r\n      return (\r\n        <article key={slug}>\r\n          <header>\r\n            <h3\r\n              style={{\r\n                marginBottom: rhythm(1 / 4),\r\n              }}\r\n            >\r\n              <Link style={{ boxShadow: `none` }} to={slug}>\r\n                {title}\r\n              </Link>\r\n            </h3>\r\n            <small>{date}</small>\r\n          </header>\r\n          <section>\r\n            <p\r\n              dangerouslySetInnerHTML={{\r\n                __html: description || node.excerpt,\r\n              }}\r\n            />\r\n          </section>\r\n        </article>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <Layout title={tagHeader}>\r\n      <Bio />\r\n      {postList}\r\n      <Link to=\"/tags\">Return to all tags</Link>\r\n    </Layout>\r\n  )\r\n\r\n\r\n}\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n              description: PropTypes.string.isRequired,\r\n              date: PropTypes.string.isRequired\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\nexport default Tags\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            description\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}